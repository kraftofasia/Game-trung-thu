<style>
    /* CSS ƒê√É CHUY·ªÇN KHUNG H√åNH SANG CHI·ªÄU NGANG (LANDSCAPE) */
    .game-container {
        font-family: Arial, sans-serif;
        text-align: center;
        padding: 15px;
        border: 2px solid #ff9900; 
        border-radius: 10px;
        background-color: #f0f8ff; 
        max-width: 600px; /* TƒÉng gi·ªõi h·∫°n chi·ªÅu ngang t·ªëi ƒëa */
        margin: 0 auto;
        box-sizing: border-box;
    }
    .game-title {
        color: #cc0033;
        font-size: 4vw; /* Gi·∫£m font-size cho ti√™u ƒë·ªÅ */
        font-weight: bold;
        margin-bottom: 15px;
    }
    #score-time {
        display: flex;
        justify-content: space-around;
        margin-bottom: 15px;
        font-size: 3.5vw;
        font-weight: bold;
    }
    #score-value { color: #28a745; }
    #time-value { color: #cc0033; }
    
    #game-board {
        width: 100%; /* Chi·∫øm to√†n b·ªô chi·ªÅu r·ªông container */
        padding-bottom: 56.25%; /* T·ª∑ l·ªá 16:9 (9/16 = 0.5625) */
        margin: 0 auto;
        position: relative;
        background-color: #e9ecef; 
        border-radius: 8px;
    }
    .game-object {
        position: absolute;
        width: 10%; /* K√≠ch th∆∞·ªõc b√°nh nh·ªè l·∫°i cho khung ngang */
        height: 18%; /* Chi·ªÅu cao t∆∞∆°ng ·ª©ng 10% chi·ªÅu r·ªông */
        border-radius: 50%;
        background-color: #d2b48c; 
        border: 3px solid #a0522d; 
        cursor: pointer;
        opacity: 0;
        transform: scale(0.5);
        transition: opacity 0.2s, transform 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 200%; 
        color: #cc0033;
    }
    .game-object.active {
        opacity: 1;
        transform: scale(1);
    }
    .start-btn {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 18px;
        margin-top: 15px;
    }
    #final-message {
        margin-top: 20px;
        font-size: 4vw;
        font-weight: bold;
        min-height: 25px;
    }
    
    /* Gi·ªõi h·∫°n k√≠ch th∆∞·ªõc font t·ªëi ƒëa tr√™n m√†n h√¨nh l·ªõn */
    @media (min-width: 600px) {
        .game-title { font-size: 24px; }
        #score-time { font-size: 18px; }
        .game-object { font-size: 30px; }
        #final-message { font-size: 20px; }
    }
</style>

<div class="game-container">
    <div class="game-title">ƒê·∫¨P B√ÅNH TRUNG THU</div>
    
    <div id="score-time">
        <div>ƒêi·ªÉm: <span id="score-value">0</span></div>
        <div>Th·ªùi gian: <span id="time-value">15</span>s</div>
    </div>
    
    <div id="game-board">
        </div>

    <button class="start-btn" id="startButton" onclick="startGame()">B·∫ÆT ƒê·∫¶U CH∆†I</button>
    
    <div id="final-message">Nh·∫•n B·∫ÆT ƒê·∫¶U ƒë·ªÉ ch∆°i (15 gi√¢y)</div>
</div>

<script>
    // JavaScript Logic
    const TIME_LIMIT = 15;
    const NUM_OBJECTS = 6; 

    let score = 0;
    let timeLeft = TIME_LIMIT;
    let timer;
    let gameInterval;
    let isGameRunning = false;

    const scoreValueEl = document.getElementById('score-value');
    const timeValueEl = document.getElementById('time-value');
    const boardEl = document.getElementById('game-board');
    const startBtn = document.getElementById('startButton');
    const finalMessageEl = document.getElementById('final-message');

    let gameObjects = [];
    for(let i = 0; i < NUM_OBJECTS; i++) {
        const obj = document.createElement('div');
        obj.classList.add('game-object');
        obj.textContent = 'ü•Æ';
        obj.onclick = () => hitObject(obj);
        boardEl.appendChild(obj);
        gameObjects.push(obj);
    }

    function startGame() {
        if (isGameRunning) return;
        isGameRunning = true;
        
        score = 0;
        timeLeft = TIME_LIMIT;
        scoreValueEl.textContent = score;
        timeValueEl.textContent = timeLeft;
        startBtn.disabled = true;
        startBtn.textContent = 'ƒêANG CH∆†I...';
        finalMessageEl.textContent = 'ƒê·∫≠p c√†ng nhanh c√†ng t·ªët!';
        finalMessageEl.style.color = '#007bff';

        gameObjects.forEach(obj => obj.classList.remove('active'));

        timer = setInterval(updateTimer, 1000);
        gameInterval = setInterval(showRandomObject, 700); 
    }

    function updateTimer() {
        timeLeft--;
        timeValueEl.textContent = timeLeft;

        if (timeLeft <= 0) {
            endGame();
        }
    }
    
    function endGame() {
        clearInterval(timer);
        clearInterval(gameInterval);
        isGameRunning = false;
        
        gameObjects.forEach(obj => obj.classList.remove('active'));
        
        finalMessageEl.textContent = `HO√ÄN TH√ÄNH! B·∫°n ƒë·∫°t ${score} ƒëi·ªÉm! Nh·ªõ ƒëƒÉng k√Ω c∆°m nh√©!`;
        finalMessageEl.style.color = 'green';
        startBtn.disabled = false;
        startBtn.textContent = 'CH∆†I L·∫†I';
    }

    function getRandomPosition() {
        // ƒêi·ªÅu ch·ªânh v·ªã tr√≠ ng·∫´u nhi√™n cho khung ngang (16:9)
        // Chi·ªÅu ngang (X): 10% - 80% (t·ª´ 100%)
        const x = Math.random() * 80 + 5; 
        // Chi·ªÅu d·ªçc (Y): 10% - 70% (t·ª´ 56.25% chi·ªÅu r·ªông)
        const y = Math.random() * 65 + 5; 
        return { x, y };
    }

    function showRandomObject() {
        const objIndex = Math.floor(Math.random() * NUM_OBJECTS);
        const obj = gameObjects[objIndex];
        
        const pos = getRandomPosition();
        obj.style.left = pos.x + '%';
        obj.style.top = pos.y + '%';
        
        obj.classList.add('active');
        
        setTimeout(() => {
            obj.classList.remove('active');
        }, 1000);
    }

    function hitObject(obj) {
        if (!obj.classList.contains('active') || !isGameRunning) return;

        score++;
        scoreValueEl.textContent = score;
        
        obj.classList.remove('active');
        
        // Hi·ªáu ·ª©ng tƒÉng ƒëi·ªÉm
        const hitFeedback = document.createElement('div');
        hitFeedback.textContent = '+1';
        hitFeedback.style.cssText = `
            position: absolute; 
            left: ${obj.style.left}; 
            top: ${obj.style.top}; 
            color: #28a745; 
            font-weight: bold; 
            font-size: 20px; 
            pointer-events: none;
            animation: fade-up 0.5s forwards;
        `;
        boardEl.appendChild(hitFeedback);

        setTimeout(() => boardEl.removeChild(hitFeedback), 500);
    }
    
    // Th√™m keyframe cho hi·ªáu ·ª©ng +1
    const styleSheet = document.createElement("style");
    styleSheet.innerHTML = `
        @keyframes fade-up {
            from { opacity: 1; transform: translateY(0); }
            to { opacity: 0; transform: translateY(-20px); }
        }
    `;
    document.head.appendChild(styleSheet);
</script>
